const readline = require('readline');
const { exec } = require('child_process');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function showMenu() {
  console.log('\nüåü === Menu do Chatbot === üåü');
  console.log('1Ô∏è‚É£  Iniciar o chatbot ü§ñ');
  console.log('2Ô∏è‚É£  Parar o chatbot üõë');
  console.log('3Ô∏è‚É£  Reiniciar o chatbot üîÑ');
  console.log('4Ô∏è‚É£  Sair üö™');
  console.log('============================\n');
}

function handleMenuOption(option) {
  switch (option) {
    case '1':
      console.log('ü§ñ Iniciando o chatbot...');
      exec('pm2 start chatbot', (err, stdout, stderr) => {
        if (err) {
          console.error('‚ùå Erro ao iniciar o chatbot:', err.message);
          return;
        }
        console.log(stdout || stderr);
      });
      break;
    case '2':
      console.log('üõë Parando o chatbot...');
      exec('pm2 stop chatbot', (err, stdout, stderr) => {
        if (err) {
          console.error('‚ùå Erro ao parar o chatbot:', err.message);
          return;
        }
        console.log(stdout || stderr);
      });
      break;
    case '3':
      console.log('üîÑ Reiniciando o chatbot...');
      exec('pm2 restart chatbot', (err, stdout, stderr) => {
        if (err) {
          console.error('‚ùå Erro ao reiniciar o chatbot:', err.message);
          return;
        }
        console.log(stdout || stderr);
      });
      break;
    case '4':
      console.log('üö™ Saindo... At√© logo! üëã');
      rl.close();
      process.exit(0);
      break;
    default:
      console.log('‚ùå Op√ß√£o inv√°lida. Tente novamente.');
  }
}

function main() {
  showMenu();
  rl.question('üëâ Escolha uma op√ß√£o: ', (option) => {
    handleMenuOption(option);
    main(); // Mostra o menu novamente ap√≥s a escolha
  });
}

main();
const readline = require('readline');
const { startBot, stopBot, restartBot } = require('./chatbot'); // Importa as fun√ß√µes do chatbot.js

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function showMenu() {
  console.log('\nüåü === Menu do Chatbot === üåü');
  console.log('1Ô∏è‚É£  Iniciar o chatbot ü§ñ');
  console.log('2Ô∏è‚É£  Parar o chatbot üõë');
  console.log('3Ô∏è‚É£  Reiniciar o chatbot üîÑ');
  console.log('4Ô∏è‚É£  Sair do menu (bot continuar√° rodando) üö™');
  console.log('============================\n');
}

function handleMenuOption(option) {
  switch (option) {
    case '1':
      console.log('ü§ñ Comando: Iniciar o chatbot');
      startBot(); // Chama a fun√ß√£o para iniciar o bot
      break;
    case '2':
      console.log('üõë Comando: Parar o chatbot');
      stopBot(); // Chama a fun√ß√£o para parar o bot
      break;
    case '3':
      console.log('üîÑ Comando: Reiniciar o chatbot');
      restartBot(); // Chama a fun√ß√£o para reiniciar o bot
      break;
    case '4':
      console.log('üö™ Saindo do menu... O bot continuar√° rodando (se estiver ativo). üëã');
      rl.close(); // Fecha o menu
      break;
    default:
      console.log('‚ùå Op√ß√£o inv√°lida. Tente novamente.');
  }
}

function main() {
  showMenu();
  rl.question('üëâ Escolha uma op√ß√£o: ', (option) => {
    handleMenuOption(option);
    if (option !== '4') {
      main(); // Mostra o menu novamente, exceto se a op√ß√£o for "4"
    }
  });
}

main();
